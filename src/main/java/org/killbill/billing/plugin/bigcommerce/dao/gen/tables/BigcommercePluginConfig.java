/*
 * This file is generated by jOOQ.
 */
package org.killbill.billing.plugin.bigcommerce.dao.gen.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.killbill.billing.plugin.bigcommerce.dao.gen.Keys;
import org.killbill.billing.plugin.bigcommerce.dao.gen.Killbill;
import org.killbill.billing.plugin.bigcommerce.dao.gen.tables.records.BigcommercePluginConfigRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BigcommercePluginConfig extends TableImpl<BigcommercePluginConfigRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>killbill.bigcommerce_plugin_config</code>
     */
    public static final BigcommercePluginConfig BIGCOMMERCE_PLUGIN_CONFIG = new BigcommercePluginConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BigcommercePluginConfigRecord> getRecordType() {
        return BigcommercePluginConfigRecord.class;
    }

    /**
     * The column <code>killbill.bigcommerce_plugin_config.tenant_id</code>.
     */
    public final TableField<BigcommercePluginConfigRecord, String> TENANT_ID = createField(DSL.name("tenant_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>killbill.bigcommerce_plugin_config.url</code>.
     */
    public final TableField<BigcommercePluginConfigRecord, String> URL = createField(DSL.name("url"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    private BigcommercePluginConfig(Name alias, Table<BigcommercePluginConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private BigcommercePluginConfig(Name alias, Table<BigcommercePluginConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>killbill.bigcommerce_plugin_config</code> table reference
     */
    public BigcommercePluginConfig(String alias) {
        this(DSL.name(alias), BIGCOMMERCE_PLUGIN_CONFIG);
    }

    /**
     * Create an aliased <code>killbill.bigcommerce_plugin_config</code> table reference
     */
    public BigcommercePluginConfig(Name alias) {
        this(alias, BIGCOMMERCE_PLUGIN_CONFIG);
    }

    /**
     * Create a <code>killbill.bigcommerce_plugin_config</code> table reference
     */
    public BigcommercePluginConfig() {
        this(DSL.name("bigcommerce_plugin_config"), null);
    }

    public <O extends Record> BigcommercePluginConfig(Table<O> child, ForeignKey<O, BigcommercePluginConfigRecord> key) {
        super(child, key, BIGCOMMERCE_PLUGIN_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return Killbill.KILLBILL;
    }

    @Override
    public UniqueKey<BigcommercePluginConfigRecord> getPrimaryKey() {
        return Keys.KEY_BIGCOMMERCE_PLUGIN_CONFIG_PRIMARY;
    }

    @Override
    public List<UniqueKey<BigcommercePluginConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<BigcommercePluginConfigRecord>>asList(Keys.KEY_BIGCOMMERCE_PLUGIN_CONFIG_PRIMARY);
    }

    @Override
    public BigcommercePluginConfig as(String alias) {
        return new BigcommercePluginConfig(DSL.name(alias), this);
    }

    @Override
    public BigcommercePluginConfig as(Name alias) {
        return new BigcommercePluginConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BigcommercePluginConfig rename(String name) {
        return new BigcommercePluginConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BigcommercePluginConfig rename(Name name) {
        return new BigcommercePluginConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
